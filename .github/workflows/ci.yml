name: CI

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - 'CHANGES*'
      - 'Doc/**'
      - 'appveyor.yml'
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - 'CHANGES*'
      - 'Doc/**'
      - 'appveyor.yml'
  release:
    types: [published]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    name: "Linux"
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Install Dependencies
      run: |
          set -x
          source $GITHUB_WORKSPACE/Tools/GHA-linux-install.sh

          cpu_count=$(nproc)
          CC="gcc"
          CXX="g++"

          export CC CXX

          echo CC="$CC" >> $GITHUB_ENV
          echo CXX="$CXX" >> $GITHUB_ENV

          ls -la $(which $CC) $(which $CXX)
          $CC --version
          $CXX --version

    - name: Configure
      run: |
          source $GITHUB_WORKSPACE/Tools/CI-linux-environment.sh
          set -x
          mkdir -p build
          cd build
          cmake .. -DCMAKE_INSTALL_PREFIX="./swig-linux" -DCMAKE_C_FLAGS="-DPCRE2_STATIC" -DCMAKE_CXX_FLAGS="-DPCRE2_STATIC" -DPCRE2_INCLUDE_DIR=/usr/include -DPCRE2_LIBRARY=/usr/lib/x86_64-linux-gnu/libpcre2-8.a -DBISON_EXECUTABLE=/usr/bin/bison

    - name: Build & Install
      working-directory: build
      run: |
          set -x
          cmake --build . --config Release $SWIGJOBS --target install
          cd swig-linux/bin
          ls -l
          strip ./swig
          ls -l
          file ./swig
          ./swig -version && ./swig -pcreversion

    # - name: Upload Artifact
    #   uses: actions/upload-artifact@v3
    #   with: 
    #     name: swig-linux
    #     path: build/swig-linux

    - name: Pack dist files
      if: github.event_name == 'release'
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        directory: 'build/swig-linux'
        path: '.'
        filename: 'swig-linux.zip'
        exclusions: '*/csharp/* */d/* */go/* */guile/* */java/* */javascript/jsc/* */javascript/v8/* */lua/* */mzscheme/* */ocaml/* */octave/* */perl5/* */php/* */python/* */r/* */ruby/* */scilab/* */tcl/* */xml/*'

    - name: Upload to Release
      if: github.event_name == 'release'
      uses: svenstaro/upload-release-action@e74ff71f7d8a4c4745b560a485cc5fdb9b5b999d
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/swig-linux/swig-linux.zip
        asset_name: swig-linux.zip
        tag: ${{ github.ref }}
  
  build-windows:
    name: "Windows"
    runs-on: windows-2019
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Download pcre2
      uses: suisei-cn/actions-download-file@v1.0.1
      with:
        url: https://github.com/PhilipHazel/pcre2/archive/refs/tags/pcre2-10.39.zip
        target: pcre2
    - name: Unzip
      run: |
          7z x pcre2/pcre2-10.39.zip
    - name: Build pcre2
      run: |
          cd pcre2-pcre2-10.39
          cmake . -G "Visual Studio 16 2019" -DPCRE2_STATIC_RUNTIME=ON -DCMAKE_INSTALL_PREFIX="pcre-install"
          cmake --build . --config Release --target install
    - name: Download bison
      uses: suisei-cn/actions-download-file@v1.0.1
      with:
        url: http://downloads.sourceforge.net/gnuwin32/bison-2.4.1-bin.zip
        target: bison
    - name: Unzip bison
      run: |
          cd bison
          7z x bison-2.4.1-bin.zip
    - name: Download bison dependencies
      uses: suisei-cn/actions-download-file@v1.0.1
      with:
        url: http://downloads.sourceforge.net/gnuwin32/bison-2.4.1-dep.zip
        target: bison

    - name: Unzip bison dependencies
      run: |
          cd bison
          7z x bison-2.4.1-dep.zip

    - name: Build Swig
      run: |
        cd build
        cmd.exe  /c '.\build-win-ci.bat'
    # - name: Upload Artifact
    #   uses: actions/upload-artifact@v3
    #   with: 
    #     name: swig-windows
    #     path: build/swig-windows

    - name: Pack dist files
      if: github.event_name == 'release'
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        directory: 'build/swig-windows'
        path: '.'
        filename: 'swig-windows.zip'
        exclusions: 'share\swig\4.1.0\csharp share\swig\4.1.0\d share\swig\4.1.0\go share\swig\4.1.0\guile share\swig\4.1.0\java share\swig\4.1.0\javascript\jsc share\swig\4.1.0\javascript\v8 share\swig\4.1.0\lua share\swig\4.1.0\mzscheme share\swig\4.1.0\ocaml share\swig\4.1.0\octave share\swig\4.1.0\perl5 share\swig\4.1.0\php share\swig\4.1.0\python share\swig\4.1.0\r share\swig\4.1.0\ruby share\swig\4.1.0\scilab share\swig\4.1.0\tcl share\swig\4.1.0\xml'

    - name: Upload to Release
      if: github.event_name == 'release'
      uses: svenstaro/upload-release-action@e74ff71f7d8a4c4745b560a485cc5fdb9b5b999d
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/swig-windows/swig-windows.zip
        asset_name: swig-windows.zip
        tag: ${{ github.ref }}

  build-mac:
    name: "macOS"
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install dependencies
      run: |
        brew install pcre2
        brew fetch --force --deps --bottle-tag=arm64_big_sur pcre2  | grep "Downloaded to:" | awk '{ print $3 }' | xargs -n 1 tar -xzvf
    - name: Configure x86_64
      run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DCMAKE_INSTALL_PREFIX="./swig-mac" -DCMAKE_C_FLAGS="-DPCRE2_STATIC" -DCMAKE_CXX_FLAGS="-DPCRE2_STATIC" -DPCRE2_INCLUDE_DIR=/usr/local/include -DPCRE2_LIBRARY=/usr/local/lib/libpcre2-8.a -DBISON_EXECUTABLE=/usr/bin/bison

    - name: Build & Install x86_64
      working-directory: build
      run: |
          set -x
          cpu_count=$(sysctl -n hw.ncpu)
          SWIGJOBS=-j$cpu_count
          cmake --build . --config Release $SWIGJOBS --target install
          ./swig -version && ./swig -pcreversion
    - name: Configure arm64
      run: |
          mkdir -p build_arm64
          cd build_arm64
          PCRE_ARM64_ROOT=$GITHUB_WORKSPACE/pcre2/10.40
          cmake .. -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 -DCMAKE_OSX_ARCHITECTURES=arm64 -DCMAKE_INSTALL_PREFIX="./swig-mac" -DCMAKE_C_FLAGS="-DPCRE2_STATIC" -DCMAKE_CXX_FLAGS="-DPCRE2_STATIC" -DPCRE2_INCLUDE_DIR=$PCRE_ARM64_ROOT/include -DPCRE2_LIBRARY=$PCRE_ARM64_ROOT/lib/libpcre2-8.a -DBISON_EXECUTABLE=/usr/bin/bison

    - name: Build & Install arm64
      working-directory: build_arm64
      run: |
          set -x
          cpu_count=$(sysctl -n hw.ncpu)
          SWIGJOBS=-j$cpu_count
          cmake --build . --config Release $SWIGJOBS
    - name: Build Fat Library
      run: |
        mv build/swig-mac/bin/swig .
        lipo -create ./swig ./build_arm64/swig -output ./build/swig-mac/bin/swig
        lipo -info ./build/swig-mac/bin/swig

    # - name: Upload Artifact
    #   uses: actions/upload-artifact@v3
    #   with: 
    #     name: swig-mac
    #     path: build/swig-mac
    - name: Pack dist files
      if: github.event_name == 'release'
      uses: thedoctor0/zip-release@main
      with:
        type: 'zip'
        directory: 'build/swig-mac'
        path: '.'
        filename: 'swig-mac.zip'
        exclusions: '*/csharp/* */d/* */go/* */guile/* */java/* */javascript/jsc/* */javascript/v8/* */lua/* */mzscheme/* */ocaml/* */octave/* */perl5/* */php/* */python/* */r/* */ruby/* */scilab/* */tcl/* */xml/*'

    - name: Upload to Release
      if: github.event_name == 'release'
      uses: svenstaro/upload-release-action@e74ff71f7d8a4c4745b560a485cc5fdb9b5b999d
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: build/swig-mac/swig-mac.zip
        asset_name: swig-mac.zip
        tag: ${{ github.ref }}

